version: '3.8'

services:
  web:
    build: .
    container_name: masterlist-web
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - PYTHONUNBUFFERED=1
    volumes:
      - ./data:/app/data
      - ./qa_reports:/app/qa_reports
      - ./projects.json:/app/projects.json:ro
      - ./project_tags.json:/app/project_tags.json:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/stats"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  analytics:
    build: .
    container_name: masterlist-analytics
    command: python analytics/report_generator.py all --format json
    volumes:
      - ./data:/app/data
      - ./projects.json:/app/projects.json:ro
      - ./project_tags.json:/app/project_tags.json:ro
    restart: "no"

  insights:
    build: .
    container_name: masterlist-insights
    command: python insights/ai_insights.py --generate-all
    volumes:
      - ./data:/app/data
      - ./projects.json:/app/projects.json:ro
      - ./project_tags.json:/app/project_tags.json:ro
    restart: "no"

  quality:
    build: .
    container_name: masterlist-quality
    command: python qa/validation_system.py --run-all
    volumes:
      - ./qa_reports:/app/qa_reports
      - ./projects.json:/app/projects.json:ro
      - ./project_tags.json:/app/project_tags.json:ro
    restart: "no"

  nginx:
    image: nginx:alpine
    container_name: masterlist-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
    restart: unless-stopped

  redis:
    image: redis:alpine
    container_name: masterlist-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  redis-data:

networks:
  default:
    name: masterlist-network